//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


class NLJsonParserDLLPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="SWIGRegisterExceptionCallbacks_NLJsonParserDLL")]
    public static extern void SWIGRegisterExceptionCallbacks_NLJsonParserDLL(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_NLJsonParserDLL")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_NLJsonParserDLL(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_NLJsonParserDLL(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_NLJsonParserDLL(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;
    private static global::System.Object exceptionsLock = null;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(exceptionsLock) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(exceptionsLock) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }

    static SWIGPendingException() {
      exceptionsLock = new global::System.Object();
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="SWIGRegisterStringCallback_NLJsonParserDLL")]
    public static extern void SWIGRegisterStringCallback_NLJsonParserDLL(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_NLJsonParserDLL(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static NLJsonParserDLLPINVOKE() {
  }


  protected class SWIGWStringHelper {

    [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
    public delegate string SWIGWStringDelegate(global::System.IntPtr message, int length);
    static SWIGWStringDelegate wstringUTF16Delegate = new SWIGWStringDelegate(CreateWStringFromUTF16);
    static SWIGWStringDelegate wstringUTF32Delegate = new SWIGWStringDelegate(CreateWStringFromUTF32);

    [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="SWIGRegisterWStringCallback_NLJsonParserDLL")]
    public static extern void SWIGRegisterWStringCallback_NLJsonParserDLL(SWIGWStringDelegate wstringUTF16Delegate, SWIGWStringDelegate wstringUTF32Delegate);

    public static string CreateWStringFromUTF16([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString, int length) {
      return global::System.Runtime.InteropServices.Marshal.PtrToStringUni(cString, length);
    }

    public static string CreateWStringFromUTF32([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString, int length) {
      if (length == 0)
        return string.Empty;

      byte[] buffer = new byte[length * 4];
      global::System.Runtime.InteropServices.Marshal.Copy(cString, buffer, 0, buffer.Length);
      return global::System.Text.Encoding.UTF32.GetString(buffer);
    }

    static SWIGWStringHelper() {
      SWIGRegisterWStringCallback_NLJsonParserDLL(wstringUTF16Delegate, wstringUTF32Delegate);
    }
  }

  static protected SWIGWStringHelper swigWStringHelper = new SWIGWStringHelper();


  protected class SWIGWStringExceptionHelper {

    [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
    public delegate void SWIGWStringExceptionDelegate(global::System.IntPtr message, int length);
    static SWIGWStringExceptionDelegate applicationExceptionUTF16Delegate = new SWIGWStringExceptionDelegate(SetPendingApplicationExceptionUTF16);
    static SWIGWStringExceptionDelegate applicationExceptionUTF32Delegate = new SWIGWStringExceptionDelegate(SetPendingApplicationExceptionUTF32);

    [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="SWIGRegisterWStringExceptionCallback_NLJsonParserDLL")]
    public static extern void SWIGRegisterWStringExceptionCallback_NLJsonParserDLL(SWIGWStringExceptionDelegate applicationExceptionUTF16Delegate, SWIGWStringExceptionDelegate applicationExceptionUTF32Delegate);

    static string CreateWStringFromUTF16([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString, int length) {
      return global::System.Runtime.InteropServices.Marshal.PtrToStringUni(cString, length);
    }

    public static string CreateWStringFromUTF32([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString, int length) {
      if (length == 0)
        return string.Empty;

      byte[] buffer = new byte[length * 4];
      return global::System.Text.Encoding.UTF32.GetString(buffer);
    }

    static void SetPendingApplicationExceptionUTF16([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString, int length) {
      string message = SWIGWStringHelper.CreateWStringFromUTF16(cString, length);
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingApplicationExceptionUTF32([global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]global::System.IntPtr cString, int length) {
      string message = SWIGWStringHelper.CreateWStringFromUTF32(cString, length);
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }

    static SWIGWStringExceptionHelper() {
      SWIGRegisterWStringExceptionCallback_NLJsonParserDLL(applicationExceptionUTF16Delegate, applicationExceptionUTF32Delegate);
    }
  }

  static protected SWIGWStringExceptionHelper swigWStringExceptionHelper = new SWIGWStringExceptionHelper();


  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonASTDictionary__SWIG_0")]
  public static extern global::System.IntPtr new_NLJsonASTDictionary__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonASTDictionary__SWIG_1")]
  public static extern global::System.IntPtr new_NLJsonASTDictionary__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_size")]
  public static extern uint NLJsonASTDictionary_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_empty")]
  public static extern bool NLJsonASTDictionary_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_Clear")]
  public static extern void NLJsonASTDictionary_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_getitem")]
  public static extern global::System.IntPtr NLJsonASTDictionary_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_setitem")]
  public static extern void NLJsonASTDictionary_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_ContainsKey")]
  public static extern bool NLJsonASTDictionary_ContainsKey(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_Add")]
  public static extern void NLJsonASTDictionary_Add(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_Remove")]
  public static extern bool NLJsonASTDictionary_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_create_iterator_begin")]
  public static extern global::System.IntPtr NLJsonASTDictionary_create_iterator_begin(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_get_next_key")]
  [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
  public static extern string NLJsonASTDictionary_get_next_key(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTDictionary_destroy_iterator")]
  public static extern void NLJsonASTDictionary_destroy_iterator(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.IntPtr jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_delete_NLJsonASTDictionary")]
  public static extern void delete_NLJsonASTDictionary(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonASTList__SWIG_0")]
  public static extern global::System.IntPtr new_NLJsonASTList__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonASTList__SWIG_1")]
  public static extern global::System.IntPtr new_NLJsonASTList__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_Clear")]
  public static extern void NLJsonASTList_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_Add")]
  public static extern void NLJsonASTList_Add(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_size")]
  public static extern uint NLJsonASTList_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_empty")]
  public static extern bool NLJsonASTList_empty(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_capacity")]
  public static extern uint NLJsonASTList_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_reserve")]
  public static extern void NLJsonASTList_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonASTList__SWIG_2")]
  public static extern global::System.IntPtr new_NLJsonASTList__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_getitemcopy")]
  public static extern global::System.IntPtr NLJsonASTList_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_getitem")]
  public static extern global::System.IntPtr NLJsonASTList_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_setitem")]
  public static extern void NLJsonASTList_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_AddRange")]
  public static extern void NLJsonASTList_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_GetRange")]
  public static extern global::System.IntPtr NLJsonASTList_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_Insert")]
  public static extern void NLJsonASTList_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_InsertRange")]
  public static extern void NLJsonASTList_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_RemoveAt")]
  public static extern void NLJsonASTList_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_RemoveRange")]
  public static extern void NLJsonASTList_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_Repeat")]
  public static extern global::System.IntPtr NLJsonASTList_Repeat(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_Reverse__SWIG_0")]
  public static extern void NLJsonASTList_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_Reverse__SWIG_1")]
  public static extern void NLJsonASTList_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonASTList_SetRange")]
  public static extern void NLJsonASTList_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_delete_NLJsonASTList")]
  public static extern void delete_NLJsonASTList(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_name_set")]
  public static extern void NLJsonAST_name_set(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_name_get")]
  [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
  public static extern string NLJsonAST_name_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_type_set")]
  public static extern void NLJsonAST_type_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_type_get")]
  public static extern int NLJsonAST_type_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_token_set")]
  public static extern void NLJsonAST_token_set(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_token_get")]
  [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
  public static extern string NLJsonAST_token_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_list_set")]
  public static extern void NLJsonAST_list_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_list_get")]
  public static extern global::System.IntPtr NLJsonAST_list_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_dict_set")]
  public static extern void NLJsonAST_dict_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonAST_dict_get")]
  public static extern global::System.IntPtr NLJsonAST_dict_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonAST")]
  public static extern global::System.IntPtr new_NLJsonAST();

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_delete_NLJsonAST")]
  public static extern void delete_NLJsonAST(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonResult_error_set")]
  public static extern void NLJsonResult_error_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonResult_error_get")]
  public static extern bool NLJsonResult_error_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonResult_error_msg_set")]
  public static extern void NLJsonResult_error_msg_set(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonResult_error_msg_get")]
  [return: global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]
  public static extern string NLJsonResult_error_msg_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonResult_ast_set")]
  public static extern void NLJsonResult_ast_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonResult_ast_get")]
  public static extern global::System.IntPtr NLJsonResult_ast_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonResult")]
  public static extern global::System.IntPtr new_NLJsonResult();

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_delete_NLJsonResult")]
  public static extern void delete_NLJsonResult(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_new_NLJsonParser")]
  public static extern global::System.IntPtr new_NLJsonParser();

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_NLJsonParser_Parse")]
  public static extern global::System.IntPtr NLJsonParser_Parse(global::System.Runtime.InteropServices.HandleRef jarg1, [global::System.Runtime.InteropServices.MarshalAs(global::System.Runtime.InteropServices.UnmanagedType.LPWStr)]string jarg2);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_delete_NLJsonParser")]
  public static extern void delete_NLJsonParser(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("NLJsonParserDLL", EntryPoint="CSharp_CreateParser")]
  public static extern global::System.IntPtr CreateParser();
}
