//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class NLJsonAST : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal NLJsonAST(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NLJsonAST obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NLJsonAST() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          NLJsonParserDLLPINVOKE.delete_NLJsonAST(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string name {
    set {
      NLJsonParserDLLPINVOKE.NLJsonAST_name_set(swigCPtr, value);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = NLJsonParserDLLPINVOKE.NLJsonAST_name_get(swigCPtr);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public NLJsonType type {
    set {
      NLJsonParserDLLPINVOKE.NLJsonAST_type_set(swigCPtr, (int)value);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      NLJsonType ret = (NLJsonType)NLJsonParserDLLPINVOKE.NLJsonAST_type_get(swigCPtr);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string token {
    set {
      NLJsonParserDLLPINVOKE.NLJsonAST_token_set(swigCPtr, value);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = NLJsonParserDLLPINVOKE.NLJsonAST_token_get(swigCPtr);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public NLJsonASTList list {
    set {
      NLJsonParserDLLPINVOKE.NLJsonAST_list_set(swigCPtr, NLJsonASTList.getCPtr(value));
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = NLJsonParserDLLPINVOKE.NLJsonAST_list_get(swigCPtr);
      NLJsonASTList ret = (cPtr == global::System.IntPtr.Zero) ? null : new NLJsonASTList(cPtr, false);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public NLJsonASTDictionary dict {
    set {
      NLJsonParserDLLPINVOKE.NLJsonAST_dict_set(swigCPtr, NLJsonASTDictionary.getCPtr(value));
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      global::System.IntPtr cPtr = NLJsonParserDLLPINVOKE.NLJsonAST_dict_get(swigCPtr);
      NLJsonASTDictionary ret = (cPtr == global::System.IntPtr.Zero) ? null : new NLJsonASTDictionary(cPtr, false);
      if (NLJsonParserDLLPINVOKE.SWIGPendingException.Pending) throw NLJsonParserDLLPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public NLJsonAST() : this(NLJsonParserDLLPINVOKE.new_NLJsonAST(), true) {
  }

}
